
import logging
import os
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    CallbackQueryHandler, ContextTypes, filters
)

logging.basicConfig(level=logging.INFO)

TOKEN = os.environ.get("BOT_TOKEN")

main_menu = ReplyKeyboardMarkup(
    [['üíê –ö–∞—Ç–∞–ª–æ–≥', 'üõç –ó–∞–∫–∞–∑–∞—Ç—å'], ['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã']],
    resize_keyboard=True
)

# –û—Å—Ç–∞—Ç–∫–∏
stock = {
    '2': 2  # –¢–æ–ª—å–∫–æ —É –±—É–∫–µ—Ç–∞ 2 ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Flora –ü–µ—Ä–º—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text

    if text == 'üíê –ö–∞—Ç–∞–ª–æ–≥':
        catalog_text = "–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–µ—Ç:\n\n"
        catalog_text += "üåπ –ë—É–∫–µ—Ç 1 ‚Äî 18230‚ÇΩ (‚ùó –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)\n"
        if stock['2'] > 0:
            catalog_text += f"üå∑ –ë—É–∫–µ—Ç 2 ‚Äî 18230‚ÇΩ (–æ—Å—Ç–∞–ª–æ—Å—å {stock['2']} —à—Ç.)\n"
        else:
            catalog_text += "üå∑ –ë—É–∫–µ—Ç 2 ‚Äî 18230‚ÇΩ (‚ùó –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏)\n"
        catalog_text += "üåª –ë—É–∫–µ—Ç 3 ‚Äî 32600‚ÇΩ\n"
        await update.message.reply_text(catalog_text)

    elif text == 'üåπ –ë—É–∫–µ—Ç 1':
        await update.message.reply_photo(
            photo="https://floraservis.ru/upload/iblock/0d3/nkr6256qhf6b79bdh86ezgl9kufycbei.jpeg",
            caption="üåπ –ë—É–∫–µ—Ç 1 ‚Äî 18230‚ÇΩ\n‚ùó –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏."
        )

    elif text == 'üå∑ –ë—É–∫–µ—Ç 2':
        caption = "üå∑ –ë—É–∫–µ—Ç 2 ‚Äî 18230‚ÇΩ"
        if stock['2'] > 0:
            caption += f"\n–û—Å—Ç–∞–ª–æ—Å—å: {stock['2']} —à—Ç."
            keyboard = InlineKeyboardMarkup([[InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å üå∑", callback_data="order_2")]])
        else:
            caption += "\n‚ùó –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
            keyboard = None

        await update.message.reply_photo(
            photo="https://floraservis.ru/upload/iblock/0fc/abo9003vbqn2fusdjosgknhsxwczpq7j.jpeg",
            caption=caption,
            reply_markup=keyboard
        )

    elif text == 'üåª –ë—É–∫–µ—Ç 3':
        keyboard = InlineKeyboardMarkup([[InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å üåª", callback_data="order_3")]])
        await update.message.reply_photo(
            photo="https://floraservis.ru/upload/iblock/e25/f2bvr479poaj4h1qp9fx6o41slldkwqt.jpg",
            caption="üåª –ë—É–∫–µ—Ç 3 ‚Äî 32600‚ÇΩ",
            reply_markup=keyboard
        )

    elif text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu)

    elif text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await update.message.reply_text(
            "üìç –ü–µ—Ä–º—å, –ö–∞—Ä–ø–∏–Ω—Å–∫–æ–≥–æ 91–¥\nüìû +7 (342) 214-88-99\n‚è∞ 9:00‚Äì21:00"
        )

    elif text in ['24 –∞–ø—Ä–µ–ª—è 2025', '25 –∞–ø—Ä–µ–ª—è 2025', '26 –∞–ø—Ä–µ–ª—è 2025']:
        user_data[user_id]['date'] = text
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=ReplyKeyboardMarkup(
            [['9:00‚Äì12:00', '12:00‚Äì15:00', '15:00‚Äì18:00']], resize_keyboard=True
        ))

    elif text in ['9:00‚Äì12:00', '12:00‚Äì15:00', '15:00‚Äì18:00']:
        user_data[user_id]['time'] = text
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

    elif user_id in user_data and 'time' in user_data[user_id] and 'name' not in user_data[user_id]:
        user_data[user_id]['name'] = text
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

    elif user_id in user_data and 'name' in user_data[user_id] and 'phone' not in user_data[user_id]:
        user_data[user_id]['phone'] = text
        data = user_data[user_id]

        # –£–º–µ–Ω—å—à–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫
        if data['bouquet'] == "üå∑ –ë—É–∫–µ—Ç 2" and stock['2'] > 0:
            stock['2'] -= 1

        await update.message.reply_text(
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!\n\n"
            f"–ë—É–∫–µ—Ç: {data['bouquet']}\n"
            f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {data['date']}\n"
            f"–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {data['time']}\n"
            f"–ò–º—è: {data['name']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"
        )
        del user_data[user_id]

    else:
        await update.message.reply_text("–Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üòä")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å"
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    bouquet_id = query.data.split("_")[1]
    bouquet_names = {"2": "üå∑ –ë—É–∫–µ—Ç 2", "3": "üåª –ë—É–∫–µ—Ç 3"}

    if bouquet_id == '2' and stock['2'] <= 0:
        await query.message.reply_text("‚ùó –ë—É–∫–µ—Ç 2 –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        return

    user_data[user_id] = {'bouquet': bouquet_names[bouquet_id]}
    await query.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ " + bouquet_names[bouquet_id])
    await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=ReplyKeyboardMarkup(
        [['24 –∞–ø—Ä–µ–ª—è 2025', '25 –∞–ø—Ä–µ–ª—è 2025', '26 –∞–ø—Ä–µ–ª—è 2025']], resize_keyboard=True
    ))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(handle_callback))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
app.run_polling()
